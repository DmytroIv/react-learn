import React, {useEffect, useState, useContext} from 'react';
import {Redirect} from 'react-router-dom';

import ArticleForm from 'components/articleForm';
import useFetch from 'hooks/useFetch';

import {CurrentUserContext} from 'contexts/currentUser';

const EditArticle = ({match}) => {
  const {slug} = match.params;
  const apiUrl = `/articles/${slug}`;
  const [{response: fetchArticleResponse}, doFetchArticle] = useFetch(apiUrl);
  const [{response: updateArticleResponse, error: updateArticleError}, doUpdateArticle] = useFetch(apiUrl);
  const [initialValues, setInitialValues] = useState(null);
  const [isSuccessfulSubmit, setIsSuccessfulSubmit] = useState(false);
  const [currentUserState] = useContext(CurrentUserContext);

  const onSubmit = (article) => {
    doUpdateArticle({
      method: 'put',
      data: {
        article
      }
    });
  };

  useEffect(() => {
    doFetchArticle();
  }, [doFetchArticle]);

  useEffect(() => {
    if(!fetchArticleResponse) return;

    const {title, description, body, tagList} = fetchArticleResponse.article;

    setInitialValues({
      title,
      description,
      body,
      tagList
    });

  }, [fetchArticleResponse]);

  useEffect(() => {
    if(!updateArticleResponse) return;

    setIsSuccessfulSubmit(true);
  }, [updateArticleResponse]);

  if (currentUserState.isLoggedIn === null) {
    return null
  }

  if (currentUserState.isLoggedIn === false) {
    return <Redirect to="/" />
  }

  if (isSuccessfulSubmit) {
    return <Redirect to={`/articles/${slug}`} />;
  }

  return (
    <div>
      <ArticleForm
        onSubmit={onSubmit}
        initialValues={initialValues}
        errors={(updateArticleError && updateArticleError.errors) || {}}
      />
    </div>
  );
};

export default EditArticle;